[tox]
skipdist = True
skip_missing_interpreters = True
isolated_build = True
envlist = lint, static, unit

[vars]
src_path = {toxinidir}/src
test_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]test_path}

[testenv]
allowlist_externals = uv
basepython = python3.13
setenv =
  PYTHONPATH = {toxinidir}:{[vars]src_path}
  PY_COLORS=1
  UV_PROJECT = {[vars]src_path}
passenv =
  PYTHONPATH

[testenv:fmt]
description = Apply coding style standards to code
commands =
  uv run --all-extras --with ruff ruff check --fix
  uv run --all-extras --with ruff ruff format {[vars]src_path} {posargs}

[testenv:lint]
description = Check code against coding style standards
commands =
  uv run --all-extras --with ruff ruff check {[vars]src_path} {posargs}
  uv run --all-extras --with codespell codespell {[vars]all_path} {posargs}

[testenv:static]
commands =
  uv run --all-extras --with pyright pyright {[vars]src_path} {posargs}

[testenv:unit]
description = Run unit tests
passenv =
  PYTHONPATH
system_site_packages = True
deps =
  craft-archives~=2.1
  pytest
  pytest-cov
  typer
  tenacity
  requests
  pyyaml
  pydantic
commands =
  coverage run \
    --source={[vars]src_path} \
    -m pytest -v --tb=native --log-cli-level=INFO -s {posargs} \
    {[vars]test_path}
  coverage report -m
